basePath: /
consumes:
- application/json
definitions:
  auth.AccessTokenResponse:
    properties:
      accessToken:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhbGciOiJIUzI1NiIsImV4cCI6MTc0NjAyMTY0NSwic3ViIjoiMDllMjNjNDAtM2JjMC00OTI0LWIxMDAtMmI3YjMyZDMxMGZlIn0.2ZSXXjxsLqeQOaovDU4tuj-8-6Hd7pUBxLpchURpWDU
        type: string
    required:
    - accessToken
    type: object
  auth.ApiKeyResponse:
    properties:
      apiKey:
        description: ApiKey is a string formatted as "xxx.yyy" where "xxx" is a public
          id, and "yyy" is a secret that is only stored encrypted on the server
        example: fa40d13983db9cf8a19477d42f652726.37c476287cb99a1e6b1ad69006ad8c48d7c494368a21e16e5dbd2d29235de87b
        type: string
    required:
    - apiKey
    type: object
  auth.LoginData:
    properties:
      email:
        example: johndoe@example.com
        type: string
      password:
        example: foobar
        type: string
    required:
    - email
    - password
    type: object
  auth.RegisterData:
    properties:
      email:
        example: johndoe@example.com
        type: string
      firstName:
        example: John
        type: string
      lastName:
        example: Doe
        type: string
      password:
        example: foobar
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    type: object
  common.ErrorResponse:
    properties:
      error:
        example: error
        type: string
    type: object
  common.SuccessResponse:
    properties:
      status:
        example: success
        type: string
    type: object
  user.GetUserInfoResponse:
    properties:
      firstName:
        example: John
        type: string
      lastName:
        example: Doe
        type: string
    required:
    - firstName
    - lastName
    type: object
host: localhost:8080
info:
  contact:
    name: Peter Marki
    url: https://github.com/pmarkee
  description: API key passed in header X-API-KEY
  title: Auth Strategies Showcase
  version: "1"
paths:
  /auth/api-key:
    get:
      description: 'generate an API key for the authenticated user (WARNING: the key
        will only be returned once and cannot be retrieved later!)'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.ApiKeyResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - session: []
      summary: generate an API key for the authenticated user
      tags:
      - auth
  /auth/login:
    post:
      parameters:
      - description: email and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              description: Session cookie
              type: string
          schema:
            $ref: '#/definitions/common.SuccessResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: login via email and password
      tags:
      - auth
  /auth/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessResponse'
        "500":
          description: Internal Server Error
      summary: log the user out of the current session
      tags:
      - auth
  /auth/register:
    post:
      parameters:
      - description: email, full name and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessResponse'
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: register via email and password
      tags:
      - auth
  /auth/token/login:
    post:
      parameters:
      - description: email and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AccessTokenResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: exchange email and password for an access and refresh token
      tags:
      - auth
  /user/api-key:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetUserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "500":
          description: Internal Server Error
      security:
      - ApiKey: []
      summary: fetch the authenticated user's first and last name - api key auth
      tags:
      - user
  /user/basic:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetUserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "500":
          description: Internal Server Error
      security:
      - BasicAuth: []
      summary: fetch the authenticated user's first and last name - basic auth
      tags:
      - user
  /user/session:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetUserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "500":
          description: Internal Server Error
      security:
      - session: []
      summary: fetch the authenticated user's first and last name - session auth
      tags:
      - user
  /user/token:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetUserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: fetch the authenticated user's first and last name - token auth
      tags:
      - user
produces:
- application/json
securityDefinitions:
  ApiKey:
    description: API key passed in the X-API-Key header
    in: header
    name: X-API-Key
    type: apiKey
  BasicAuth:
    type: basic
  Bearer:
    description: Enter the token with the "Bearer " prefix
    in: header
    name: Authorization
    type: apiKey
  session:
    description: session cookie
    in: cookie
    name: session
    type: apiKey
swagger: "2.0"
