basePath: /
consumes:
- application/json
definitions:
  auth.AccessToken:
    properties:
      accessToken:
        type: string
    type: object
  auth.LoginData:
    properties:
      email:
        example: johndoe@example.com
        type: string
      password:
        example: foobar
        type: string
    required:
    - email
    - password
    type: object
  auth.RegisterData:
    properties:
      email:
        example: johndoe@example.com
        type: string
      firstName:
        example: John
        type: string
      lastName:
        example: Doe
        type: string
      password:
        example: foobar
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    type: object
  common.ErrorResponse:
    properties:
      error:
        example: error
        type: string
    type: object
  common.SuccessResponse:
    properties:
      status:
        example: success
        type: string
    type: object
  user.GetUserInfoResponse:
    properties:
      firstName:
        example: John
        type: string
      lastName:
        example: Doe
        type: string
    required:
    - firstName
    - lastName
    type: object
host: localhost:8080
info:
  contact:
    name: Peter Marki
    url: https://github.com/pmarkee
  description: API key passed in header X-API-KEY
  title: Auth Strategies Showcase
  version: "1"
paths:
  /auth/login:
    post:
      parameters:
      - description: email and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              description: Session cookie
              type: string
          schema:
            $ref: '#/definitions/common.SuccessResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: login via email and password
      tags:
      - auth
  /auth/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessResponse'
        "500":
          description: Internal Server Error
      summary: log the user out of the current session
      tags:
      - auth
  /auth/register:
    post:
      parameters:
      - description: email, full name and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.SuccessResponse'
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: register via email and password
      tags:
      - auth
  /auth/token/login:
    post:
      parameters:
      - description: email and password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AccessToken'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: exchange email and password for an access and refresh token
      tags:
      - auth
  /user/basic:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetUserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "500":
          description: Internal Server Error
      security:
      - BasicAuth: []
      summary: fetch the authenticated user's first and last name - basic auth
      tags:
      - user
  /user/session:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetUserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "500":
          description: Internal Server Error
      security:
      - session: []
      summary: fetch the authenticated user's first and last name - session auth
      tags:
      - user
  /user/token:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetUserInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ErrorResponse'
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: fetch the authenticated user's first and last name - token auth
      tags:
      - user
produces:
- application/json
securityDefinitions:
  BasicAuth:
    type: basic
  Bearer:
    description: Enter the token with the "Bearer " prefix
    in: header
    name: Authorization
    type: apiKey
  session:
    description: session cookie
    in: cookie
    name: session
    type: apiKey
swagger: "2.0"
